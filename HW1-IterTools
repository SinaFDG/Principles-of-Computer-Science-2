# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import groupby
print(*[(len(list(c)), int(k)) for k, c in groupby(input())])

--------------
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations
N = int(input())
L = input().split()
K = int(input())
C = list(combinations(L, K))
F = filter(lambda c: 'a' in c, C)
print("{0:.3}".format(len(list(F))/len(C)))

---------------
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations
s, k = input().split()
for i in range(1, int(k)+1):
    for j in combinations(sorted(s), i):
        print(''.join(j))

-----------------
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import combinations_with_replacement
s, k = input().split()
for c in combinations_with_replacement(sorted(s), int(k)):
    print("".join(c))

-----------------
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import permutations
s,n = input().split()
print(*[''.join(i) for i in permutations(sorted(s),int(n))],sep='\n')

------------------
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import product
A = list(map(int, input().split()))
B = list(map(int, input().split()))
print(*product(A, B))

-----------------
# Enter your code here. Read input from STDIN. Print output to STDOUT
from itertools import product
K,M = map(int,input().split())
N = (list(map(int, input().split()))[1:] for _ in range(K))
results = map(lambda x: sum(i**2 for i in x)%M, product(*N))
print(max(results))




